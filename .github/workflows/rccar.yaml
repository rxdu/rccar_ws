name: ros

on:
  pull_request:
  push:
  workflow_dispatch:
    
jobs:
  build-rccar:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - 
        name: Install tools
        run: |
          curl -s https://packagecloud.io/install/repositories/dirk-thomas/vcstool/script.deb.sh | sudo bash
          sudo apt-get update
          sudo apt-get install python3-vcstool
      - 
        name: Setup SSH and clone submodules
        env:
          GITHUB_HOST_KEY: ${{ secrets.SSH_HOST_KEY }}
          GITHUB_SSH_KEY: ${{ secrets.RDU_SSH_KEY }}
        run: |   
          mkdir -p $HOME/.ssh
          echo ${GITHUB_HOST_KEY} >> $HOME/.ssh/known_hosts
          echo "${GITHUB_SSH_KEY}" > $HOME/.ssh/id_rsa        
          chmod 600 $HOME/.ssh/id_rsa        
          git config --global --add safe.directory ${GITHUB_WORKSPACE}        
          export GIT_SSH_COMMAND="ssh -i $HOME/.ssh/id_rsa -o UserKnownHostsFile=$HOME/.ssh/known_hosts"
          cd ${GITHUB_WORKSPACE} && git submodule update --init --recursive
          mkdir src
          source /usr/share/vcstool-completion/vcs.bash
          vcs import --skip-existing --recursive src < rccar_ros2.repos
          unset GIT_SSH_COMMAND
      - 
        name: Build workspace
        run: |
          docker build -t $GITHUB_REPOSITORY -f ./.devcontainer/Dockerfile .
          docker run -v $GITHUB_WORKSPACE:$GITHUB_WORKSPACE -w $GITHUB_WORKSPACE $GITHUB_REPOSITORY \
          bash -c "colcon build --cmake-args '-DCMAKE_BUILD_TYPE=Release'"
          
  # lint:
  #   name: ament_${{ matrix.linter }}
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #         linter: [cppcheck, cpplint, uncrustify, lint_cmake, xmllint, flake8, pep257]
  #   steps:
  #     - 
  #       name: Checkout code
  #       uses: actions/checkout@v2
  #     -
  #       name: Run linter
  #       run: |
  #         docker build -t $GITHUB_REPOSITORY -f ./.devcontainer/Dockerfile .
  #         docker run -v $GITHUB_WORKSPACE:$GITHUB_WORKSPACE -w $GITHUB_WORKSPACE $GITHUB_REPOSITORY \
  #         bash -c "
  #         vcs import --skip-existing < src/ros2.repos src \
  #         && ament_${{ matrix.linter }} src/
  #         "
